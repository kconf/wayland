# vim: ft=swayconfig foldmethod=marker
#
# See: https://github.com/dawsers/scroll/blob/master/config.in

#: Variables {{{

# Mod key: Mod4 is the Super/Windows key
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $home u
set $end i

# Your preferred terminal emulator
set $term wezterm

# Your perferred file manager
set $filemanager thunar

# Your preferred application launcher
set $menu rofi -dpi -1 -show

#: }}}

#: XWayland {{{
xwayland disable
exec xwayland-satellite
exec sh -c 'sleep 1 && env DISPLAY=:0 xrdb -merge ~/.Xresources'
#: }}}

#: Basic operations {{{

# Start a terminal
bindsym $mod+Return exec "env DISPLAY=:0 $term"

# Start a file manager
bindsym $mod+e exec "env DISPLAY=:0 $filemanager"

# Start your launcher
# bindsym $mod+d exec $menu
bindsym $mod+d exec "env DISPLAY=:0 rofi -dpi -1 -show"

# Kill focused window
bindsym $mod+Shift+q kill

# }}}

#: Window Navigation {{{

# What to do when attempting to focus over the edge of a container
focus_wrapping no

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+$home focus beginning
bindsym $mod+$end focus end

# Focus other monitors
bindsym $mod+Shift+$left focus output left
bindsym $mod+Shift+$down focus output down
bindsym $mod+Shift+$up focus output up
bindsym $mod+Shift+$right focus output right

# Move your focus around
bindsym $mod+left focus left
bindsym $mod+down focus down
bindsym $mod+up focus up
bindsym $mod+right focus right
bindsym $mod+home focus beginning
bindsym $mod+end focus end

# Focus other monitors
bindsym $mod+Shift+left focus output left
bindsym $mod+Shift+down focus output down
bindsym $mod+Shift+up focus output up
bindsym $mod+Shift+right focus output right


#: }}}

#: Window Manipulation {{{

# Move the focused window with the same, but add Ctrl
bindsym $mod+Ctrl+$left move left
bindsym $mod+Ctrl+$down move down
bindsym $mod+Ctrl+$up move up
bindsym $mod+Ctrl+$right move right
bindsym $mod+Ctrl+$home move beginning
bindsym $mod+Ctrl+$end move end
# nomode
bindsym $mod+Alt+$left move left nomode
bindsym $mod+Alt+$down move down nomode
bindsym $mod+Alt+$up move up nomode
bindsym $mod+Alt+$right move right nomode
bindsym $mod+Alt+$home move beginning nomode
bindsym $mod+Alt+$end move end nomode

# Move the focused window with the same, but add Ctrl
bindsym $mod+Ctrl+left move left
bindsym $mod+Ctrl+down move down
bindsym $mod+Ctrl+up move up
bindsym $mod+Ctrl+right move right
bindsym $mod+Ctrl+home move beginning
bindsym $mod+Ctrl+end move end
# nomode
bindsym $mod+Alt+left move left nomode
bindsym $mod+Alt+down move down nomode
bindsym $mod+Alt+up move up nomode
bindsym $mod+Alt+right move right nomode
bindsym $mod+Alt+home move beginning nomode
bindsym $mod+Alt+end move end nomode

# Move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag enable

#: }}}

#: Splitting and Layouts {{{

# Layout settings
layout_default_width 0.5
layout_default_height 1.0
layout_widths [0.33333333 0.5 0.666666667 1.0]
layout_heights [0.33333333 0.5 0.666666667 1.0]

# Mode modifiers
mode "modifiers" {
    bindsym $right set_mode after; mode default 
    bindsym $left set_mode before; mode default 
    bindsym $home set_mode beginning; mode default 
    bindsym $end set_mode end; mode default 
    bindsym $up set_mode focus; mode default 
    bindsym $down set_mode nofocus; mode default 
    bindsym Ctrl+h set_mode center_horiz; mode default 
    bindsym Shift+h set_mode nocenter_horiz; mode default 
    bindsym Ctrl+v set_mode center_vert; mode default 
    bindsym Shift+v set_mode nocenter_vert; mode default 
    bindsym r set_mode reorder_auto; mode default 
    bindsym Shift+r set_mode noreorder_auto; mode default 

    # Return to default mode
    bindsym Escape mode "default"
}
bindsym $mod+backslash mode "modifiers"

# Layout mode
bindsym $mod+bracketleft set_mode h
bindsym $mod+bracketright set_mode v
bindsym $mod+v set_mode t

# Toggle layout type (h<->v)
bindsym $mod+s layout_transpose

# Make the current focus fullscreen
fullscreen_movefocus true

bindsym $mod+f fullscreen
bindsym $mod+Shift+f fullscreen global
bindsym $mod+Alt+f fullscreen_application toggle
bindsym $mod+Ctrl+Alt+f fullscreen_application reset

#: }}}

#: Floating Windows {{{

# Float a window
bindsym $mod+space floating toggle

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space focus mode_toggle

# Toggle sticky
# Window will stay on screen even if you switch to another workspace
bindsym $mod+Shift+Ctrl+a sticky toggle

# Drag floating windows with mouse
bindsym $mod+Button1 move

# Resize floating windows with mouse
bindsym $mod+Button3 resize

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

#: }}}

#: Workspace Management {{{

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10 
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth

# Move workspace to other monitor
bindsym $mod+Ctrl+1 move workspace to output left
bindsym $mod+Ctrl+2 move workspace to output right

# Scroll has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

bindsym $mod+o scratchpad show
bindsym $mod+Shift+o move scratchpad

#: }}}

#: Resize Mode {{{
set $resize_mode "Resize"
mode $resize_mode {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 100px
    bindsym $down resize grow height 100px
    bindsym $up resize shrink height 100px
    bindsym $right resize grow width 100px

    # Set horizontal size
    bindsym 1 set_size h 0.125; mode default
    bindsym 2 set_size h 0.1666666667; mode default
    bindsym 3 set_size h 0.25; mode default
    bindsym 4 set_size h 0.333333333; mode default
    bindsym 5 set_size h 0.375; mode default
    bindsym 6 set_size h 0.5; mode default
    bindsym 7 set_size h 0.625; mode default
    bindsym 8 set_size h 0.6666666667; mode default
    bindsym 9 set_size h 0.75; mode default
    bindsym 0 set_size h 0.833333333; mode default
    bindsym minus set_size h 0.875; mode default
    bindsym equal set_size h 1.0; mode default

    # Set vertical size
    bindsym Ctrl+1 set_size v 0.125; mode default
    bindsym Ctrl+2 set_size v 0.1666666667; mode default
    bindsym Ctrl+3 set_size v 0.25; mode default
    bindsym Ctrl+4 set_size v 0.333333333; mode default
    bindsym Ctrl+5 set_size v 0.375; mode default
    bindsym Ctrl+6 set_size v 0.5; mode default
    bindsym Ctrl+7 set_size v 0.625; mode default
    bindsym Ctrl+8 set_size v 0.6666666667; mode default
    bindsym Ctrl+9 set_size v 0.75; mode default
    bindsym Ctrl+0 set_size v 0.833333333; mode default
    bindsym Ctrl+minus set_size v 0.875; mode default
    bindsym Ctrl+equal set_size v 1.0; mode default
 
    # Return to default mode
    bindsym Escape mode "default"
}
bindsym $mod+r mode $resize_mode

# Resizing containers:
bindsym $mod+minus cycle_size h prev
bindsym $mod+equal cycle_size h next
bindsym $mod+Shift+minus cycle_size v prev
bindsym $mod+Shift+equal cycle_size v next

mode "align" {
    bindsym c align center; mode default
    bindsym m align middle; mode default
    bindsym r align reset; mode default
    bindsym $left align left; mode default
    bindsym $right align right; mode default
    bindsym $up align up; mode default
    bindsym $down align down; mode default
    bindsym Escape mode "default"
}
bindsym $mod+c mode "align"

mode "fit_size" {
    bindsym w fit_size h visible proportional; mode default
    bindsym Shift+w fit_size v visible proportional; mode default
    bindsym Ctrl+w fit_size h visible equal; mode default
    bindsym Ctrl+Shift+w fit_size v visible equal; mode default

    bindsym $right fit_size h toend proportional; mode default
    bindsym Shift+$right fit_size v toend proportional; mode default
    bindsym Ctrl+$right fit_size h toend equal; mode default
    bindsym Ctrl+Shift+$right fit_size v toend equal; mode default

    bindsym $left fit_size h tobeg proportional; mode default
    bindsym Shift+$left fit_size v tobeg proportional; mode default
    bindsym Ctrl+$left fit_size h tobeg equal; mode default
    bindsym Ctrl+Shift+$left fit_size v tobeg equal; mode default

    bindsym $up fit_size h active proportional; mode default
    bindsym Shift+$up fit_size v active proportional; mode default
    #bindsym Ctrl+$up fit_size h active equal; mode default
    #bindsym Ctrl+Shift+$up fit_size v active equal; mode default

    bindsym $down fit_size h all proportional; mode default
    bindsym Shift+$down fit_size v all proportional; mode default
    bindsym Ctrl+$down fit_size h all equal; mode default
    bindsym Ctrl+Shift+$down fit_size v all equal; mode default
}
bindsym $mod+w mode "fit_size"

#: }}}

#: Jump & Marks {{{

# Jump
# jump_labels_color #9e1530FF
# jump_labels_background #15309eFF
# jump_labels_scale 0.9
# jump_labels_keys asdf
bindsym --no-repeat $mod+slash jump
bindsym --no-repeat $mod+Shift+slash jump container
bindsym --no-repeat $mod+Ctrl+slash jump workspaces
bindsym --no-repeat $mod+Alt+slash jump floating

mode "trailmark" {
    bindsym bracketright trailmark next
    bindsym bracketleft trailmark prev
    bindsym semicolon trailmark toggle; mode default
    bindsym Escape mode "default"
}
bindsym $mod+semicolon mode "trailmark"

mode "trail" {
    bindsym bracketright trail next
    bindsym bracketleft trail prev
    bindsym semicolon trail new; mode default
    bindsym d trail delete; mode default
    bindsym c trail clear; mode default
    bindsym insert trail to_selection; mode default
    bindsym Escape mode "default"
}
bindsym $mod+Shift+semicolon mode "trail"

# Toggle pin
bindsym --no-repeat $mod+a pin beginning
bindsym --no-repeat $mod+Shift+a pin end

# Selection
bindsym --no-repeat $mod+Insert selection toggle
bindsym --no-repeat $mod+Ctrl+Insert selection reset
bindsym --no-repeat $mod+Shift+Insert selection move
bindsym --no-repeat $mod+Ctrl+Shift+Insert selection workspace
bindsym --no-repeat $mod+Alt+Insert selection to_trail

# Marks
# bindsym $mod+m exec scroll-mark-toggle.sh
# bindsym $mod+Shift+m exec scroll-mark-remove.sh
# bindsym $mod+apostrophe exec scroll-mark-switch.sh

#: }}}

#: Scaling {{{

# Workspace
bindsym $mod+Shift+comma scale_workspace incr -0.05
bindsym --whole-window $mod+Shift+button4 scale_workspace incr -0.05
bindsym $mod+Shift+period scale_workspace incr 0.05
bindsym --whole-window $mod+Shift+button5 scale_workspace incr 0.05
bindsym $mod+Shift+Ctrl+period scale_workspace reset

# Overview
bindsym --no-repeat $mod+tab scale_workspace overview
bindsym --whole-window button8 scale_workspace overview

# Content
bindsym $mod+comma scale_content incr -0.05
bindsym --whole-window $mod+button4 scale_content incr -0.05
bindsym $mod+period scale_content incr 0.05
bindsym --whole-window $mod+button5 scale_content incr 0.05
bindsym $mod+Ctrl+period scale_content reset

#: }}}

#: Appearance {{{

# You can get the names of your outputs by running: scrollmsg -t get_outputs
output * scale 2.0
output * bg ~/Pictures/Wallpapers/scroll.png fill

# Animations
animations {
    enabled yes
    default yes 300 var 3 [ 0.215 0.61 0.355 1 ]
    window_open yes 300 var 3 [ 0 0 1 1 ]
    window_move yes 300 var 3 [ 0.215 0.61 0.355 1 ] off 0.05 6 [0 0.6 0.4 0 1 0 0.4 -0.6 1 -0.6]
    window_size yes 300 var 3 [ -0.35 0 0 0.5 ]
}

### Windows defaults
default_border pixel 2
gaps inner 4
gaps outer 20

# Colors
# --- Gruvbox Dark ---
set $gruvbox-bg      #282828
set $gruvbox-bg0_h   #1d2021
set $gruvbox-bg1     #3c3836
set $gruvbox-fg      #ebdbb2
set $gruvbox-fg4     #a89984
set $gruvbox-gray    #928374
set $gruvbox-red     #cc241d
set $gruvbox-green   #98971a
set $gruvbox-yellow  #d79921
set $gruvbox-blue    #458588
set $gruvbox-purple  #b16286
set $gruvbox-aqua    #689d6a
set $gruvbox-orange  #d65d0e

# class                 <border>      <background>  <text>        <indicator>   <child_border>
client.focused          $gruvbox-blue $gruvbox-blue   $gruvbox-bg   $gruvbox-purple $gruvbox-blue
client.focused_inactive $gruvbox-bg1  $gruvbox-bg1    $gruvbox-fg4  $gruvbox-bg1    $gruvbox-bg1
client.unfocused        $gruvbox-bg1  $gruvbox-bg0_h  $gruvbox-gray $gruvbox-bg1    $gruvbox-bg0_h
client.urgent           $gruvbox-red  $gruvbox-red    $gruvbox-bg   $gruvbox-red    $gruvbox-red
client.placeholder      $gruvbox-bg   $gruvbox-bg     $gruvbox-fg   $gruvbox-bg     $gruvbox-bg

client.background       $gruvbox-bg

#: }}}

#: Bar settings {{{

# Read `man 5 scroll-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, scrollbar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#         scroller #2F343AFF #055E20FF #FFFFFFFF
#     }
#
#     font pango:monospace 12
# }

bar scrollbar_command waybar

#: }}}

#: Idle {{{

# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'scrollmsg "output * power off"' resume 'scrollmsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Idle inhibit for fullscreen windows
for_window [all] inhibit_idle fullscreen

#: }}}

#: Configuration {{{

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit scroll (logs you out of your Wayland session)
bindsym $mod+Shift+e exec scrollnag -t warning -m 'You pressed the exit shortcut. Do you really want to exit scroll? This will end your Wayland session.' -B 'Yes, exit scroll' 'scrollmsg exit'

#: }}}

#: System {{{

  # Special keys to adjust volume via PulseAudio
  bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
  bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
  bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
  bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle

  # Special keys to control media via playerctl
  bindsym --locked XF86AudioPlay exec playerctl play-pause
  bindsym --locked XF86AudioPause exec playerctl play-pause
  bindsym --locked XF86AudioPrev exec playerctl previous
  bindsym --locked XF86AudioNext exec playerctl next
  bindsym --locked XF86AudioStop exec playerctl stop

  # Special keys to adjust brightness via brightnessctl
  bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
  bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

  # Special key to take a screenshot with grim
  bindsym Print exec grim

#: }}}

#: Startup applications {{{
exec fcitx5 --replace -d
#: }}}

